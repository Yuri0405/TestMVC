@using TestMVC.Models
@model Film

@{
    ViewBag.Title = "Film Details";
    var avaibleCategories = ViewData["AvaibleCategories"] as List<Category>;
}

<h2>Film Details</h2>

<div>
    <dl>
        <dt>Id</dt>
        <dd>@Model.Id</dd>

        <dt>Name</dt>
        <dd>@Model.Name</dd>

        <dt>Director</dt>
        <dd>@Model.Director</dd>

        <dt>Release Day</dt>
        <dd>@Model.Release.ToShortDateString()</dd>
    </dl>
    <h4>Categories:</h4>
    <div id="categoryList">
        @foreach (var category in Model.Categories)
        {
            <div class="category-box">
                @category.Category.Name
                <button type="button" class="category-close" data-category-id="@category.CategoryId">x</button>
            </div>
        }
    </div>

    <div class="form-group mt-3">
        <label for="newCategory">Add New Category:</label>
        <select id="newCategory" class="form-control">
            <option value="">Select Category</option>
            @foreach (var availableCategory in avaibleCategories)
            {
                <option value="@availableCategory.Id">@availableCategory.Name</option>
            }
        </select>
        <button id="addCategoryBtn" type="button" class="btn btn-primary mt-2">Add Category</button>
    </div>    
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            // Remove category button click event
            $('.category-close').click(function () {
                var categoryId = $(this).data('category-id');
                var filmId = @Model.Id
                var closeButton = $(this);
                    $.post('/Film/RemoveFilmFromCategory', { filmId: filmId, categoryId: categoryId })
                        .done(function (data) {
                            // Make an Ajax call to remove category and update UI
                            // Example: You can use $.post or $.ajax to send a request to your controller action
                            // Update UI after successful removal
                            closeButton.parent().remove();
                        })
                        .fail(function () {
                            alert("Something wrong on server when added category")
                        });
            });

            // Add category button click event
            $('#addCategoryBtn').click(function () {
                var categoryId = $('#newCategory').val();
                var filmId = @Model.Id
                if (categoryId) {
                    $.post('/Film/SetFilmToCategory', { filmId: filmId, categoryId: categoryId })
                        .done(function (data) {
                            // Make an Ajax call to add category and update UI
                            // Example: You can use $.post or $.ajax to send a request to your controller action
                            // Update UI after successful addition
                            var categoryName = $('#newCategory option:selected').text();
                            $('#categoryList').append('<div class="category-box">' + categoryName +
                                '<button type="button" class="category-close" data-category-id="' + categoryId + '">x</button></div>');
                            $('#newCategory').val(''); // Reset dropdown selection
                        })
                        .fail(function () {
                            alert("Something wrong on server when added category")
                        });
                }
            });
        });
    </script>
}